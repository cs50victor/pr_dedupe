name: pr_dedupe
description: finds duplicate or similar pull requests
author: Victor A. <52110451+cs50victor@users.noreply.github.com>
inputs:
  min_similarity:
    description: "Minimum similarity to check for (i.e display all PRs that are 80% > similar )"
    required: false
    default: 80
  top_k:
    description: "Number of matching PRs to return"
    required: false
    default: 10
  vector_db:
    description: "Name of the vector database to use. (currently support 'upstash')"
    required: false
    default: "upstash"
  token:
    description: "The GitHub token to use for downloading the action, defaults to workflow token"
    required: true
    default: ${{ github.token }}
outputs:
  similar_prs:
    description: "Stringified json containing a list of similar PRs"
    value: ${{ steps.run.outputs.similar_prs }}

runs:
  using: "composite"
  steps:
    - name: Set reusable variables
      shell: bash
      run: |
        echo "action_repo=pr_dedupe" >> $GITHUB_ENV
        echo "action_org=cs50victor" >> $GITHUB_ENV
        echo "binary_name=pr_dedupe" >> $GITHUB_ENV

    - name: Add binary extension
      shell: bash
      if: runner.os == 'Windows'
      run: echo "binary_name=${{ env.binary_name }}.exe" >> $GITHUB_ENV

    - name: Get Action Version
      id: get_action_version
      shell: pwsh
      run: |
        $finalComponent = Split-Path -Leaf ${{ github.action_path }}
        if ($finalComponent -eq "${{ env.action_repo }}") {
          $version = ""
        } else {
          $version = $finalComponent
        }
        Write-Output "version=$version" >> $Env:GITHUB_OUTPUT

    - name: Download Action
      shell: bash
      run: gh release download ${{ steps.get_action_version.outputs.version }} -R ${{ env.action_org }}/${{ env.action_repo }} -p '${{ runner.os }}.tgz' -O - | tar -xz
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Download Model Info
      shell: bash
      run: | 
          tag=${{ steps.get_action_version.outputs.version }}
          tag=${tag:1}
          echo $tag
          gh release download ${{ steps.get_action_version.outputs.version }} -R ${{ env.action_org }}/${{ env.action_repo }} -A tar.gz -O - | tar -xz -C . --strip-components=1 ${{ env.action_repo }}-$tag/hub
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Get All Changed Files
      id: files
      uses: jitterbit/get-changed-files@v1
      with:
        format: "csv"

    - name: Run Action
      shell: bash
      id: run
      run: ./${{ runner.os }}/${{ env.binary_name }} --closed ${{ github.event.pull_request.closed }} -m "${{ inputs.min_similarity }}" -k "${{ inputs.top_k }}" --db "${{ inputs.vector_db }}" --added "${{ steps.files.outputs.added }}" --modified "${{ steps.files.outputs.modified }}" --removed "${{ steps.files.outputs.removed }}" --renamed "${{ steps.files.outputs.removed }}"
      env:
        HF_HOME: "."
        PR_NUMBER: ${{ github.event.number }}
        REPO_NAME: ${{ github.repository }}
        GITHUB_SHA: ${{ env.GITHUB_SHA }}
